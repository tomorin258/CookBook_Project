<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.mappers.RecipesMapper">

    <resultMap id="RecipesResultMap" type="model.Recipes">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <!-- <result property="description" column="description"/>  // 已删除 -->
        <result property="instructions" column="instructions"/>
        <result property="cookTime" column="cook_time"/>
        <result property="servings" column="servings"/>
        <result property="likeCount" column="like_count"/>
        <result property="imageUrl" column="image_url"/>
    </resultMap>

    <!-- Add a new recipes entry -->
    <insert id="addRecipes" parameterType="model.Recipes" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO recipes (user_id, title, instructions, cook_time, servings, like_count, image_url)
        VALUES (#{userId}, #{title}, #{instructions}, #{cookTime}, #{servings}, #{likeCount}, #{imageUrl})
    </insert>

    <!-- Delete a recipes entry by ID -->
    <delete id="deleteRecipes" parameterType="int">
        DELETE FROM recipes WHERE id = #{id}
    </delete>

    <!-- Update a recipes entry -->
    <update id="updateRecipes" parameterType="model.Recipes">
        UPDATE recipes
        SET user_id = #{userId},
            title = #{title},
            instructions = #{instructions},
            cook_time = #{cookTime},
            servings = #{servings},
            like_count = #{likeCount},
            image_url = #{imageUrl}
        WHERE id = #{id}
    </update>

    <!-- Select a recipes entry by ID -->
    <select id="getRecipeById" parameterType="int" resultMap="RecipesResultMap">
        SELECT id, user_id, title, instructions, cook_time, servings, like_count, image_url
        FROM recipes
        WHERE id = #{id}
    </select>

    <!-- Select recipes entries by title (fuzzy match) -->
    <select id="getRecipesByTitle" parameterType="string" resultMap="RecipesResultMap">
        SELECT id, user_id, title, instructions, cook_time, servings, like_count, image_url
        FROM recipes
        WHERE title LIKE CONCAT('%', #{title}, '%')
    </select>

    <!-- Select the newest recipes entry -->
    <select id="getNewestRecipes" resultMap="RecipesResultMap">
        SELECT id, user_id, title, instructions, cook_time, servings, like_count, image_url
        FROM recipes
        ORDER BY id DESC LIMIT 1
    </select>

    <!-- Select  recipes entries by likeCount -->
    <select id="getLikeRecipes" resultType="Recipes">
        SELECT id, user_id AS userId, title, description, instructions,
               cook_time AS cookTime, servings, like_count AS likeCount, image_url AS imageUrl
        FROM recipes
        ORDER BY like_count DESC
    </select>

    <!-- Select all recipes entries -->
    <select id="getAllRecipes" resultMap="RecipesResultMap">
        SELECT id, user_id, title, instructions, cook_time, servings, like_count, image_url
        FROM recipes
    </select>

    <!-- Select all recipes entries sorted by like count in descending order -->
    <select id="getRecipesSortedByLikes" resultMap="RecipesResultMap">
        SELECT id, user_id, title, instructions, cook_time, servings, like_count, image_url
        FROM recipes
        ORDER BY like_count DESC
    </select>

</mapper>